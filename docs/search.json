[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 barn authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jordi Rosell. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rosell J (2025). barn: Preprocessing Feature Engineering Steps Modeling. R package version 0.0.0.9000.","code":"@Manual{,   title = {barn: Preprocessing and Feature Engineering Steps before Modeling},   author = {Jordi Rosell},   year = {2025},   note = {R package version 0.0.0.9000}, }"},{"path":"/reference/barn-package.html","id":null,"dir":"Reference","previous_headings":"","what":"barn: Preprocessing and Feature Engineering Steps before Modeling — barn-package","title":"barn: Preprocessing and Feature Engineering Steps before Modeling — barn-package","text":"package provides pipeable functions simplify preprocessing tabular data prior machine learning modeling. Users can combine multiple datasets, define feature engineering steps (creating new predictors nominal numeric columns), split data back preprocessed datasets ready used machine learning workflows.","code":""},{"path":"/reference/barn-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"barn: Preprocessing and Feature Engineering Steps before Modeling — barn-package","text":"Maintainer: Jordi Rosell jroselln@gmail.com (ORCID)","code":""},{"path":"/reference/barn.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine datasets to preprocess — barn","title":"Combine datasets to preprocess — barn","text":"Combine multiple data frames based common columns. first step preprocessing barn package. printing shows characteristics combined datasets.","code":""},{"path":"/reference/barn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine datasets to preprocess — barn","text":"","code":"barn(..., nominal_sufix = \"_cat\", numeric_sufix = \"_num\")  # S3 method for class 'barn' print(x, form_width = 30, ...)"},{"path":"/reference/barn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine datasets to preprocess — barn","text":"... Extra arguments. nominal_sufix optional string dealing nominal variables. Defaults \"_cat\". numeric_sufix optional string dealing numeric variables. Defaults \"_num\". x object class \"barn\". form_width integer specifying minimum column width (characters). Default 30.","code":""},{"path":"/reference/barn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine datasets to preprocess — barn","text":"list containing combined data frame, row counts,","code":""},{"path":"/reference/barn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine datasets to preprocess — barn","text":"","code":"full <- data.frame(id = 1:3, p1 = c(\"A\", \"B\", \"C\"), p2 = 10:12, y = 1:3) holdout <- data.frame(id = 4:5, p1 = c(\"D\", \"E\"), p2 = 1:2) original <- data.frame(id = 1:2, p1 = c(\"F\", \"G\"), p2 = 3:4, y = 4:5) print(barn(full, holdout, original)) #>  #> ── Barn                           ────────────────────────────────────────────── #>  #> ── Settings                        #> nominal_sufix: _cat #> numeric_sufix: _num #>  #>  #> ── Datasets                        #> # The combined dataset: 7 x 3 #> # A tibble: 3 × 2 #>   dataset  row_count #>   <chr>        <int> #> 1 full             3 #> 2 holdout          2 #> 3 original         2 #>  #> ── Exploratory Data Analysis       #> # A tibble: 3 × 4 #>   variable type    unique missing #>   <chr>    <chr>    <int>   <int> #> 1 id       numeric      5       0 #> 2 p1       numeric      7       0 #> 3 p2       numeric      7       0"},{"path":"/reference/harvest.html","id":null,"dir":"Reference","previous_headings":"","what":"Split the combined dataset — harvest","title":"Split the combined dataset — harvest","text":"Splits combined data frame barn object back named list containing preprocessed predictors.","code":""},{"path":"/reference/harvest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split the combined dataset — harvest","text":"","code":"harvest(barn_obj)"},{"path":"/reference/harvest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split the combined dataset — harvest","text":"barn_obj object class \"barn\", created barn().","code":""},{"path":"/reference/harvest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split the combined dataset — harvest","text":"named list data frames, one dataset originally passed barn().","code":""},{"path":"/reference/harvest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split the combined dataset — harvest","text":"","code":"full <- data.frame(id = 1:3, p1 = c(\"A\", \"B\", \"C\"), p2 = 10:12, y = 1:3) holdout <- data.frame(id = 4:5, p1 = c(\"D\", \"E\"), p2 = 1:2) original <- data.frame(id = 1:2, p1 = c(\"F\", \"G\"), p2 = 3:4, y = 4:5) harvested <- barn(full, holdout) |> harvest() names(harvested) #> [1] \"full\"    \"holdout\" harvested[[\"full\"]] #>   id p1 p2 #> 1  1  A 10 #> 2  2  B 11 #> 3  3  C 12"},{"path":"/reference/plant_count_encode.html","id":null,"dir":"Reference","previous_headings":"","what":"Encode categorical columns with counts — plant_count_encode","title":"Encode categorical columns with counts — plant_count_encode","text":"Frequency encoding nominal variables.","code":""},{"path":"/reference/plant_count_encode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Encode categorical columns with counts — plant_count_encode","text":"","code":"plant_count_encode(barn_obj, nominal_suffix = \"_cat\")"},{"path":"/reference/plant_count_encode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Encode categorical columns with counts — plant_count_encode","text":"barn_obj Barn object, typically bbarchart package. nominal_suffix suffix applied column names. Defaults \"_cat\".","code":""},{"path":"/reference/plant_count_encode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Encode categorical columns with counts — plant_count_encode","text":"Modified Barn object encoded count columns categorical variables.","code":""},{"path":"/reference/plant_label_encode.html","id":null,"dir":"Reference","previous_headings":"","what":"Encode labels in a barn object — plant_label_encode","title":"Encode labels in a barn object — plant_label_encode","text":"Transform nominal columns factors integers.","code":""},{"path":"/reference/plant_label_encode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Encode labels in a barn object — plant_label_encode","text":"","code":"plant_label_encode(barn_obj)"},{"path":"/reference/plant_label_encode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Encode labels in a barn object — plant_label_encode","text":"barn_obj instance class \"barn\".","code":""},{"path":"/reference/plant_label_encode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Encode labels in a barn object — plant_label_encode","text":"modified barn_obj encoded plant labels character factor columns.","code":""},{"path":"/reference/plant_new_nominal_pairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new nominal pairs — plant_new_nominal_pairs","title":"Create new nominal pairs — plant_new_nominal_pairs","text":"function create new features based combinations categorical columns barn object.","code":""},{"path":"/reference/plant_new_nominal_pairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new nominal pairs — plant_new_nominal_pairs","text":"","code":"plant_new_nominal_pairs(barn_obj, nominal_suffix = \"_cat\")"},{"path":"/reference/plant_new_nominal_pairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create new nominal pairs — plant_new_nominal_pairs","text":"barn_obj object inheriting \"barn\" class. nominal_suffix character string specifies suffix newly created columns. Optional, default \"_cat\".","code":""},{"path":"/reference/plant_new_nominal_pairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new nominal pairs — plant_new_nominal_pairs","text":"updated barn object new nominal pairs.","code":""},{"path":"/reference/plant_new_numeric_factors.html","id":null,"dir":"Reference","previous_headings":"","what":"New factors from numerical columns — plant_new_numeric_factors","title":"New factors from numerical columns — plant_new_numeric_factors","text":"function transform numeric character columns barn object new factor columns. appends \"_num\" numeric columns, \"_cat\" character columns, renames factors. Original columns deleted combined data frame within barn object.","code":""},{"path":"/reference/plant_new_numeric_factors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"New factors from numerical columns — plant_new_numeric_factors","text":"","code":"plant_new_numeric_factors(   barn_obj,   numeric_suffx = \"_num\",   nominal_suffix = \"_cat\" )"},{"path":"/reference/plant_new_numeric_factors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"New factors from numerical columns — plant_new_numeric_factors","text":"barn_obj barn object inheriting class(\"barn\"). numeric_suffx suffix new numeric factor columns. Default \"_num\". nominal_suffix suffix new nominal factor columns. Default \"_cat\".","code":""},{"path":"/reference/plant_new_numeric_factors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"New factors from numerical columns — plant_new_numeric_factors","text":"modified barn_obj transformed combined data frame.","code":""}]
